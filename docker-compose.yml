version: '3.6'
services:
  keycloak:
    container_name: rems_prod_keycloak  
    # command: ["-Djboss.http.port=8180"]
    ports:
      - '8180:8080'
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=h2
    volumes:
      - rems_prod_keycloak-data:/opt/jboss/keycloak/standalone/data/
    image: codexrems/keycloak:REMSvCurrent

  # Create test-ehr container
  test-ehr: # Name of our service
    container_name: rems_prod_test-ehr
    ports: # Port binding to host from docker container
      - '8080:8080' # Bind port 3000 of host to 3000 of container
    image: codexrems/test-ehr:REMSvCurrent
    environment:
      - DOCKER_PROFILE=true
    extra_hosts:
      - "host.docker.internal:host-gateway"


  # Create crd container
  crd: # Name of our service
    image: codexrems/crd:REMSvCurrent
    container_name: rems_prod_crd
    ports: # Port binding to host from docker container
      - "8090:8090" # Bind port 3000 of host to 3000 of container
    environment:
      VSAC_API_KEY: ${VSAC_API_KEY}
    volumes:
      - rems_prod_crd-server-ValueSetCache:/CRD/server/ValueSetCache


  # Create crd request generator container
  crd-request-generator: # Name of our service
    image: codexrems/crd-request-generator:REMSvCurrent
    container_name: rems_prod_crd-request-generator
    environment:
      - REACT_APP_REMS_CONFIG=true
    ports: # Port binding to host from docker container
      - "3000:3000" # Bind port 3000 of host to 3000 of container
      - "3001:3001"


  # Create dtr container
  dtr: # Name of our service
    image: codexrems/dtr:REMSvCurrent
    container_name: rems_prod_dtr
    ports: # Port binding to host from docker container
      - "3005:3005" # Bind port 3000 of host to 3000 of container

  # # Create rems container
  rems-administrator: # Name of our service
    image: codexrems/rems-administrator:REMSvCurrent
    container_name: rems_prod_rems
    ports: # Port binding to host from docker container
      - "9015:9015" # Bind port 3000 of host to 3000 of container

  pharmacy-information-system: # Name of our service
    image: codexrems/pharmacy-information-system:REMSvCurrent
    container_name: rems_prod_pharmacy-information-system
    environment:
      - PORT=3010
      - MONGODB_CONNSTRING=mongodb://pharmacy-information-root:pharmacy-information-password@pharmacy-information-system-database:27017?retryWrites=true&w=majority
      - CRD_BASE_URL=http://crd:8090/
    ports: # Port binding to host from docker container
      - "4200:4200" 
      - "3010:3010"

  pharmacy-information-system-database: # Name of our service
    image: mongo
    container_name: rems_dev_pharmacy-information-system-database
    environment:
      MONGO_INITDB_ROOT_USERNAME: pharmacy-information-root
      MONGO_INITDB_ROOT_PASSWORD: pharmacy-information-password
    expose:
      - "27017"
    ports: # Port binding to host from docker container
      - "27017:27017" 
    volumes:
      - rems_porter_pharmacy-infomation-system-database:/data/db


volumes:
  rems_prod_keycloak-data:
  rems_porter_pharmacy-infomation-system-database:
  rems_prod_crd-server-ValueSetCache:
