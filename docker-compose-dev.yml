version: '3.6'
services:
  keycloak:
    container_name: rems_dev_keycloak
    # command: ["-Djboss.http.port=8180"]
    ports:
      - '8180:8080'
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=h2
    volumes:
      - rems_dev_keycloak-data:/opt/jboss/keycloak/standalone/data/
      - '../test-ehr/src/main/resources/ClientFhirServerRealm.json:/resources/ClientFhirServerRealm.json'
    build:
      context: ../test-ehr
      dockerfile: Dockerfile.keycloak

  test-ehr:
    container_name: rems_dev_test-ehr
    ports:
      - '8080:8080'
      - "8081:8081"
    environment:
      - DOCKER_PROFILE=true
    build:
      context: ../test-ehr
      dockerfile: Dockerfile.dev
    volumes:
      - rems_dev_test-ehr-sync:/test-ehr:nocopy #  nocopy is important
      - rems_dev_test-ehr-gradle:/test-ehr/.gradle
      - rems_dev_test-ehr-bin:/test-ehr/bin
      - rems_dev_test-ehr-build:/test-ehr/build
      - rems_dev_test-ehr-target:/test-ehr/target
      - rems_dev_test-ehr-logs:/test-ehr/logs
    extra_hosts:
      - "host.docker.internal:host-gateway"

  pims_remsadmin_mongo:
    image: mongo:6.0
    container_name: pims_remsadmin_mongo
    ports:
      - '27018:27017' 
    environment:
      MONGO_INITDB_ROOT_USERNAME: pharmacy-information-root
      MONGO_INITDB_ROOT_PASSWORD: pharmacy-information-password
    volumes:
      - pims_remsadmin_mongo:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  # Create crd container
  # crd:
  #   # Name of our service
  #   build:
  #     context: ../CRD
  #     dockerfile: Dockerfile.dev
  #   container_name: rems_dev_crd
  #   ports:
  #     # Port binding to host from docker container
  #     - "8090:8090" # Bind port 3000 of host to 3000 of container
  #     - "8091:8091"
  #   environment:
  #     VSAC_API_KEY: ${VSAC_API_KEY}
  #   volumes:
  #     - rems_dev_crd-sync:/CRD:nocopy #  nocopy is important
  #     - rems_dev_crd-logs:/CRD/logs
  #     - rems_dev_crd-gradle:/CRD/.gradle
  #     - rems_dev_crd-server-gradle:/CRD/server/.gradle
  #     - rems_dev_crd-server-build:/CRD/server/build
  #     - rems_dev_crd-server-bin:/CRD/server/bin
  #     - rems_dev_crd-server-ValueSetCache:/CRD/server/ValueSetCache
  #     - rems_dev_crd-operations-build:/CRD/operations/build
  #     - rems_dev_crd-resources-build:/CRD/resources/build

  crd-request-generator:
    build:
      context: ../crd-request-generator
      dockerfile: Dockerfile.dev
    container_name: rems_dev_crd-request-generator
    environment:
      - REACT_APP_REMS_CONFIG=true
    ports:
      - "3000:3000" 
      - "3001:3001"
    volumes:
      - rems_dev_crd-request-generator-sync:/home/node/app/crd-request-generator:nocopy #  nocopy is important
      - rems_dev_crd-request-generator-nodeModules:/home/node/app/crd-request-generator/node_modules
      - rems_dev_crd-request-generator-databaseData:/home/node/app/crd-request-generator/databaseData
      - rems_dev_crd-request-generator-build:/home/node/app/crd-request-generator/build
      - rems_dev_crd-request-generator-logs:/home/node/app/crd-request-generator/logs

  dtr:
    build:
      context: ../dtr
      dockerfile: Dockerfile.dev
    container_name: rems_dev_dtr
    ports:
      - "3005:3005"
      - "3006:3006"
    volumes:
      - rems_dev_dtr-sync:/home/node/app/dtr:nocopy #  nocopy is important
      - rems_dev_dtr-nodeModules:/home/node/app/dtr/node_modules
      - rems_dev_dtr-databaseData:/home/node/app/dtr/databaseData
      - rems_dev_dtr-logs:/home/node/app/dtr/logs

  rems-administrator:
    build:
      context: '.'
      dockerfile: Dockerfile.dev
    container_name: rems_dev_rems
    ports:
      # Port binding to host from docker container
      - "8090:8090" # Bind port 3000 of host to 3000 of container
    volumes:
      - rems_dev_rems-sync:/REMS:nocopy #  nocopy is important

  # pharmacy-information-system: # Name of our service
  #   build: 
  #     context: ../pharmacy-information-system
  #     dockerfile: Dockerfile.dev     
  #   container_name: rems_dev_pharmacy-information-system
  #   environment:
  #     - PORT=3010
  #     - MONGODB_CONNSTRING=mongodb://pharmacy-information-root:pharmacy-information-password@pharmacy-information-system-database:27017?retryWrites=true&w=majority
  #     - CRD_BASE_URL=http://crd:8090/
  #   ports: # Port binding to host from docker container
  #     - "4200:4200" 
  #     - "3010:3010"
  #     - "3011:3011"
  #   volumes:
  #     - rems_dev_pharmacy-information-system-sync:/home/node/app/pharmacy-information-system:nocopy #  nocopy is important
  #     - rems_dev_pharmacy-information-system-nodeModules:/home/node/app/pharmacy-information-system/node_modules
  #     - rems_dev_pharmacy-information-system-backend-nodeModules:/home/node/app/pharmacy-information-system/backend/node_modules
  #     - rems_dev_pharmacy-information-system-logs:/home/node/app/pharmacy-information-system/logs

  pims:
    build:
      context: ../pims
      dockerfile: Dockerfile.dev
    container_name: rems_dev_pims
    ports:
      - "4200:3000" #4200 was the frontend port for the old pims
    volumes:
      - rems_dev_pims-sync:/home/node/app/pims:nocopy
      - rems_dev_pims-nodeModules:/home/node/app/pims/node_modules
      # - rems_dev_pims-backend-nodeModules:/home/node/app/pims/backend/node_modules
      - rems_dev_pims-logs:/home/node/app/pims/logs
  
  # pharmacy-information-system-database: # Name of our service
  #   image: mongo
  #   container_name: rems_dev_pharmacy-information-system-database
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: pharmacy-information-root
  #     MONGO_INITDB_ROOT_PASSWORD: pharmacy-information-password
  #   expose:
  #     - "27017"
  #   ports: # Port binding to host from docker container
  #     - "27017:27017" 
  #   volumes:
  #     - rems_dev_pharmacy-infomation-system-database:/data/db

volumes:
  rems_dev_test-ehr-sync:
    external: true
  # rems_dev_crd-sync:
  #   external: true
  rems_dev_crd-request-generator-sync:
    external: true
  rems_dev_dtr-sync:
    external: true
  rems_dev_rems-sync:
    external: true
  rems_dev_pims-sync:
    external: true

  rems_dev_keycloak-data:
  pims_remsadmin_mongo:
  rems_dev_test-ehr-gradle:
  rems_dev_test-ehr-bin:
  rems_dev_test-ehr-build:
  rems_dev_test-ehr-target:
  rems_dev_test-ehr-logs:
  # rems_dev_crd-logs:
  # rems_dev_crd-gradle:
  # rems_dev_crd-server-gradle:
  # rems_dev_crd-server-build:
  # rems_dev_crd-server-bin:
  # rems_dev_crd-server-ValueSetCache:
  # rems_dev_crd-operations-build:
  rems_dev_crd-resources-build:
  rems_dev_crd-request-generator-nodeModules:
  rems_dev_crd-request-generator-databaseData:
  rems_dev_crd-request-generator-build:
  rems_dev_crd-request-generator-logs:
  rems_dev_dtr-nodeModules:
  rems_dev_dtr-databaseData:
  rems_dev_dtr-logs:
  rems_dev_pims-nodeModules: # rems_dev_pims-backend-nodeModules:

  rems_dev_pims-logs: # rems_dev_pims-database:
